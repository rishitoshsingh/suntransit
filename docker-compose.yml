version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - suntransit-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 7200000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - suntransit-net

  producer-valley-metro:
    build: ./producer
    container_name: producer-valley-metro
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: valley_metro_positions
      GTFS_AGENCY: valley-metro
      GTFS_URL: https://mna.mecatran.com/utw/ws/gtfsfeed/vehicles/valleymetro?apiKey=4f22263f69671d7f49726c3011333e527368211f
    networks:
      - suntransit-net
  
  producer-mbta:
    build: ./producer
    container_name: producer-mbta
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: mbta_positions
      GTFS_AGENCY: mbta-metro
      GTFS_URL: https://cdn.mbta.com/realtime/VehiclePositions.pb
    networks:
      - suntransit-net

  spark-master:
    build: ./spark-image
    container_name: spark-master
    depends_on:
      - kafka
      - redis
    volumes:
      - ./spark-jobs:/app
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - USER=root
      - HADOOP_USER_NAME=spark
    ports:
      - "8080:8080"
      - "4040:4040"   # Spark Application UI (first app)
      - "4041:4041"   # Spark Application UI (second app)
      - "7078:7078"   # Spark driver port
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    networks:
      - suntransit-net
    

  spark-worker:
    build: ./spark-image
    depends_on:
      - spark-master
      - kafka
      - redis
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=2G
      - USER=spark
      - HADOOP_USER_NAME=spark
    # ports:
    #   - "8081:8081"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    networks:
      - suntransit-net

  redis:
    image: redis/redis-stack:latest
    container_name: suntransit-redis
    ports:
      - "6379:6379"   # Redis server port
      - "8001:8001"   # RedisInsight UI port
    environment:
      - REDIS_ARGS=--requirepass myStrongPassword123
      - REDISTIMESERIES_ARGS="RETENTION_POLICY=300000"  # 5 minutes retention in ms
    networks:
      - suntransit-net

  dashboard:
    build: ./streamlit-dashboard
    container_name: suntransit-dashboard
    depends_on:
      - redis
    ports:
      - "8501:8501"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=myStrongPassword123
    networks:
      - suntransit-net
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   ports:
  #     - "8181:8080"
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   networks:
  #     - suntransit-net

  spark-dev:
    build:
      context: .
      dockerfile: Dockerfile.spark-dev
    container_name: spark-dev
    depends_on:
      - kafka
    volumes:
      - ./notebooks:/app
    ports:
      - "8888:8888"  # JupyterLab
      - "4141:4040"  # Spark UI
    environment:
      - SPARK_MODE=client
    networks:
      - suntransit-net
networks:
  suntransit-net:
    driver: bridge